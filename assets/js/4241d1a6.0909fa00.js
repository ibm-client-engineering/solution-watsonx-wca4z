"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9088],{3078:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var s=t(5893),i=t(1151);const a={id:"Refactor",sidebar_position:3,title:"Refactor Assistant",custom_edit_url:null},r=void 0,o={id:"Prepare/Refactor",title:"Refactor Assistant",description:"This guide assumes you have an IBM Cloud account that is accessible. It also assumes you have the ibmcloud cli installed and configured. The installation of ibmcloud cli can be found here.",source:"@site/docs/1-Prepare/2-Refactor.mdx",sourceDirName:"1-Prepare",slug:"/Prepare/Refactor",permalink:"/solution-watsonx-wca4z/Prepare/Refactor",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"Refactor",sidebar_position:3,title:"Refactor Assistant",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"ADDI",permalink:"/solution-watsonx-wca4z/Prepare/ADDI"},next:{title:"TLS Connections",permalink:"/solution-watsonx-wca4z/Prepare/TLS"}},c={},l=[{value:"Pre-Requisites",id:"pre-requisites",level:2},{value:"Hardware",id:"hardware",level:2},{value:"Software to be installed",id:"software-to-be-installed",level:2},{value:"Refactor Host",id:"refactor-host",level:2},{value:"Creating the instance in IBM Cloud",id:"creating-the-instance-in-ibm-cloud",level:3},{value:"Accessing the instance in IBM Cloud",id:"accessing-the-instance-in-ibm-cloud",level:3},{value:"Configure the data disk",id:"configure-the-data-disk",level:3},{value:"Install pre-req packages",id:"install-pre-req-packages",level:3},{value:"Retrieve and install the Refactor Assistant",id:"retrieve-and-install-the-refactor-assistant",level:3},{value:"Generate the TLS Certs for Refactor",id:"generate-the-tls-certs-for-refactor",level:3},{value:"Start up Refactor",id:"start-up-refactor",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsxs)(n.p,{children:["This guide assumes you have an IBM Cloud account that is accessible. It also assumes you have the ",(0,s.jsx)(n.code,{children:"ibmcloud"})," cli installed and configured. The installation of ",(0,s.jsx)(n.code,{children:"ibmcloud"})," cli can be found ",(0,s.jsx)(n.a,{href:"https://cloud.ibm.com/docs/cli?topic=cli-install-ibmcloud-cli",children:"here"}),"."]}),(0,s.jsx)(n.p,{children:"Mileage may vary on different cloud providers."})]}),"\n",(0,s.jsx)(n.h2,{id:"pre-requisites",children:"Pre-Requisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Watsonx Code Assistant instance deployed in IBM Cloud"}),"\n",(0,s.jsx)(n.li,{children:"IBM\xae Application Discovery and Delivery Intelligence (ADDI)"}),"\n",(0,s.jsx)(n.li,{children:"IBM Application Discovery Connect for Mainframe (IBM AD Connect for Mainframe)"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"hardware",children:"Hardware"}),"\n",(0,s.jsx)(n.p,{children:"For this build, we will be deploying a Linux Virtual Server Instance in IBM Cloud. It require the following:"}),"\n",(0,s.jsx)(n.p,{children:"Refactor Host"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"OS: Red Hat Enterprise Linux 8x/9x"}),"\n",(0,s.jsx)(n.li,{children:"RAM: 16G"}),"\n",(0,s.jsx)(n.li,{children:"Storage: 100G for local, 400G for data"}),"\n",(0,s.jsx)(n.li,{children:"Cores: 4"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"software-to-be-installed",children:"Software to be installed"}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["As of this writing, RA version 1.1.1 is available and can be downloaded from ",(0,s.jsx)(n.a,{href:"https://w3south-limited-use.cpc.ibm.com/software/xl/download/ticket.wss",children:"IBM Software Downloads"})]})}),"\n",(0,s.jsx)(n.p,{children:"Refactoring Assistant"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Podman"}),"\n",(0,s.jsx)(n.li,{children:"Refactor Containers"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"refactor-host",children:"Refactor Host"}),"\n",(0,s.jsx)(n.h3,{id:"creating-the-instance-in-ibm-cloud",children:"Creating the instance in IBM Cloud"}),"\n",(0,s.jsx)(n.p,{children:"Install the ibmcloud plugin for infrastructure service"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"note to RK: Add the cli commands to create the instance here"})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"When you create your RHEL instance, make sure you created it with your SSH key installed."})}),"\n",(0,s.jsx)(n.p,{children:"Make sure to add an external floating ip to your RHEL instance in IBM Cloud. This will allow us to SSH in using our SSH key."}),"\n",(0,s.jsx)(n.h3,{id:"accessing-the-instance-in-ibm-cloud",children:"Accessing the instance in IBM Cloud"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"ibmcloud plugin install infrastructure-service\n"})}),"\n",(0,s.jsx)(n.p,{children:'Our instance name for RHEL 9.x is called "wca4z-refactor"'}),"\n",(0,s.jsx)(n.h3,{id:"configure-the-data-disk",children:"Configure the data disk"}),"\n",(0,s.jsx)(n.p,{children:"On our IBM Cloud VSI RHEL9 host, we aren't using anything fancy like LVM2. So we're going to just spin this out as a regular disk and hang it on."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Find the disk"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"[root@wca4z-refactor ~]# lsblk\nNAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS\nvda    252:0    0  100G  0 disk\n\u251c\u2500vda1 252:1    0    1M  0 part\n\u251c\u2500vda2 252:2    0  200M  0 part /boot/efi\n\u251c\u2500vda3 252:3    0  500M  0 part /boot\n                                /\n    // highlight-start\nvdb    252:16   0  500G  0 disk\n    // highlight-end\nvdc    252:32   0  392K  0 disk\nvdd    252:48   0   44K  0 disk\n"})}),"\n",(0,s.jsx)(n.p,{children:"Create the primary partition on the new disk"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"This assumes the customer is using XFS as their filesystem for their RHEL host. Mileage may vary."})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"parted -s -a optimal /dev/vdb mklabel gpt 'mkpart primary xfs 1 -1'\n\nmkfs.xfs /dev/vdb1\n\n"})}),"\n",(0,s.jsx)(n.p,{children:"Create the necessary directory path. We want to mount all our podman storage on the data filesystem we just created"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'mkdir -p /var/lib/containers/storage\n\necho "/dev/vdb1\t/var/lib/containers/storage xfs\tdefaults 0 0" >> /etc/fstab\n\nmount -a\n'})}),"\n",(0,s.jsx)(n.p,{children:"You should now see the new filesystem mounted."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"df -h\n\n[root@wca4z-refactor containers]# df -h\nFilesystem      Size  Used Avail Use% Mounted on\ndevtmpfs        4.0M     0  4.0M   0% /dev\ntmpfs           7.9G   84K  7.9G   1% /dev/shm\ntmpfs           3.2G  351M  2.8G  11% /run\n/dev/vda4       100G   11G   89G  11% /\n/dev/vda3       495M  247M  249M  50% /boot\n/dev/vda2       200M  7.0M  193M   4% /boot/efi\ntmpfs           1.6G     0  1.6G   0% /run/user/0\n/dev/vdb1       500G  5.6G  495G   2% /var/lib/containers/storage\n"})}),"\n",(0,s.jsx)(n.h3,{id:"install-pre-req-packages",children:"Install pre-req packages"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"sudo dnf -y install podman unzip wget java-11-openjdk.x86_64 httpd-tools\n"})}),"\n",(0,s.jsx)(n.p,{children:"Enable podman and start it up."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"sudo systemctl start podman\nsudo systemctl enable podman\n\n"})}),"\n",(0,s.jsx)(n.h3,{id:"retrieve-and-install-the-refactor-assistant",children:"Retrieve and install the Refactor Assistant"}),"\n",(0,s.jsxs)(n.p,{children:["Go to IBM's internal download ",(0,s.jsx)(n.a,{href:"https://w3south-limited-use.cpc.ibm.com/software/xl/download/ticket.wss",children:"site"})," and download ",(0,s.jsx)(n.code,{children:"IBM watsonx Code Assistant for Z Refactoring Assistant 1.1.1 Linux Multilingual"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"We are extracting this package to the root directory."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"unzip IwCAfZRA_1.1.1_L_ML.zip\nArchive:  ../IwCAfZRA_1.1.1_L_ML.zip\n   creating: IBM watsonx Code Assistant for Z Refactoring Assistant 1.1.1 Linux Multilingual/\n extracting: IBM watsonx Code Assistant for Z Refactoring Assistant 1.1.1 Linux Multilingual/refactoring-assistant-1.1.1.zip\n\ncd IBM\\ watsonx\\ Code\\ Assistant\\ for\\ Z\\ Refactoring\\ Assistant\\ 1.1.1\\ Linux\\ Multilingual/\n\nunzip refactoring-assistant-1.1.1.zip\nArchive:  refactoring-assistant-1.1.1.zip\n  inflating: PRD0013118key.pem.cer\n  inflating: PRD0013118key.pem.chain\n  inflating: PRD0013118key.pem.pub.key\n extracting: WCA4Z-Data-Generator-1.1.2.zip\n  inflating: WCA4Z-Data-Generator-1.1.2.zip.sig\n  inflating: refactoring-assistant-1.1.1.tgz\n  inflating: refactoring-assistant-1.1.1.tgz.sig\n\ntar zxf refactoring-assistant-1.1.1.tgz\n\nmv refactoring-assistant ~/\n"})}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsx)(n.p,{children:"More installation info can be found here."}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://www.ibm.com/docs/en/watsonx-code-assistant-4z/1.0?topic=installing-setting-up",children:"https://www.ibm.com/docs/en/watsonx-code-assistant-4z/1.0?topic=installing-setting-up"})})]}),"\n",(0,s.jsx)(n.p,{children:"In your IBM watsonx Code Assistant for Z Refactoring Assistant root directory, run the following command to install the IBM watsonx Code Assistant for Z Refactoring Assistant container images."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-plaintext-ibm",children:"cd ~/refactoring-assistant\n./setup.sh\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Copy the ",(0,s.jsx)(n.code,{children:"config/template.properties"})," file to ",(0,s.jsx)(n.code,{children:"config/config.properties"}),". Open ",(0,s.jsx)(n.code,{children:"config/config.properties"})," in an editor and enter the values inside as instructed. You can refer to the following example:"]}),"\n",(0,s.jsx)(n.p,{children:"Important values here are:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"CERTS_LOCATION"})," will be created if it doesn't exist when we run the start command. We are using ",(0,s.jsx)(n.code,{children:"/root/certs"})," in our environment."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"AD_HOST_PORT"})," this is the ip or FQDN of the ADDI host."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ENVIRONMENT_ID"})," can be obtained from the ADDI dashboard on the ADDI Host."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://localhost:9443/ad/admin/configure?tab=environments",children:"https://localhost:9443/ad/admin/configure?tab=environments"}),"\n",(0,s.jsx)(n.img,{src:"https://github.com/ibm-client-engineering/solution-watsonx-ca4z/assets/102995992/79683afe-f0b4-483d-bd98-5a9c7af03655",alt:"ENV_ID"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"# *******************************************************************************\n# Licensed Materials - Property of IBM\n# \xa9 Copyright IBM Corporation 2022, 2023\n#\n# Note to U.S. Government Users Restricted Rights:\n# Use, duplication or disclosure restricted by GSA ADP Schedule\n# Contract with IBM Corp.\n# *******************************************************************************\n\n# Absolute path to directory where certificates and keys are kept\nCERTS_LOCATION=/root/certs\n\n# Protocol to use to communicate with AD services\nPROTOCOL=https\n\n# The IBM AD configuration (ZooKeeper) connection string, e.g. hostname.mydomain.com:2281 (use port 2181 if connection is unsecured)\nAD_HOST_PORT=10.241.64.4:2281\n\n# Ports of the AD mainframe projects and file services respectively\n# AD_PROJ_PORT=7650\n# AD_FILE_PORT=7700\n\n# The environment ID, which can be obtained from the IBM Application Discovery Configuration Service Admin dashboard\n# https://www.ibm.com/docs/en/addi/latest?topic=configuring-by-using-ad-configuration-service\nENVIRONMENT_ID=8a714d09-f67a-4891-8071-7d581959dbcc\n\n# The location of the DEX authentication server, defaults to $PROTOCOL://$AD_HOST:7600 if unset\n# DEX_HOST_PORT=\n\n# Outbound mail settings to enable email notifications\n# MAIL_HOST=\n# MAIL_PORT=\n# MAIL_USERNAME=\n# MAIL_PASSWORD=\n\n# Extra Java mail properties, which can be specified by using MAIL_PROPERTIES_ prefix\n# followed by the property name with dot separators replaced by underscores\n# MAIL_PROPERTIES_MAIL_SMTP_AUTH=true\n\n"})}),"\n",(0,s.jsx)(n.h3,{id:"generate-the-tls-certs-for-refactor",children:"Generate the TLS Certs for Refactor"}),"\n",(0,s.jsx)(n.p,{children:"Generate the TLS certs that will be required for ADDI Host and Refactor host to talk to each other."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"./start.sh --prepare-only /root/certs\n"})}),"\n",(0,s.jsx)(n.p,{children:"This will generate a bunch of certs in that directory."}),"\n",(0,s.jsxs)(n.p,{children:["In the ",(0,s.jsx)(n.code,{children:"/root/certs"})," directory, a self-signed certificate named ",(0,s.jsx)(n.code,{children:"root.crt"})," is generated from the preparatory step. Copy this certificate to the IBM ADDI host where IBM AD Configuration Server is running, and import it into the ",(0,s.jsx)(n.code,{children:"truststore"})," file that ADDI uses."]}),"\n",(0,s.jsxs)(n.p,{children:["In our case it was just easier to create the ",(0,s.jsx)(n.code,{children:"root.crt"})," file and copy the contents over."]}),"\n",(0,s.jsx)(n.p,{children:"now let's start things up"}),"\n",(0,s.jsx)(n.h3,{id:"start-up-refactor",children:"Start up Refactor"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"./start.sh\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Once the start command is run, you will be asked what image registry to download the ",(0,s.jsx)(n.code,{children:"orientdb"})," container image from. We've selected the ",(0,s.jsx)(n.code,{children:"docker.io"})," repo in this example."]})}),"\n",(0,s.jsxs)(n.p,{children:["Set the orientdb pass to ",(0,s.jsx)(n.code,{children:"inittest"})]}),"\n",(0,s.jsx)(n.p,{children:"Once things are happier, podman should show the following:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"[root@wca4z-refactor refactoring-assistant]# podman ps -a\nCONTAINER ID  IMAGE                                            COMMAND               CREATED             STATUS             PORTS                   NAMES\n2e6843cce881  docker.io/library/orientdb:3.2.18                /orientdb/bin/ser...  About a minute ago  Up About a minute                          orientdb\nbc5bbd4219b0  localhost/ibm/ra/ad-core-server:1.1.1                                  53 seconds ago      Up 52 seconds      0.0.0.0:4001->4001/tcp  ad-core-server\nb9973f5940c4  localhost/ibm/ra/refactoring-assistant:1.1.1                           52 seconds ago      Up 50 seconds      0.0.0.0:8081->8081/tcp  refactoring-assistant\nc9071da1e3b5  localhost/ibm/ra/refactoring-assistant-ui:1.1.1  /bin/sh -c nginx ...  50 seconds ago      Up 48 seconds      0.0.0.0:9443->9080/tcp  refactoring-assistant-ui\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Let's set refactor as a systemd service. The service script will ask you for the orientdb password, which we set to ",(0,s.jsx)(n.code,{children:"inittest"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"./install-as-service.sh\n"})}),"\n",(0,s.jsx)(n.p,{children:"This will configure the services as a systemd service that will start on reboots."})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>r});var s=t(7294);const i={},a=s.createContext(i);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);