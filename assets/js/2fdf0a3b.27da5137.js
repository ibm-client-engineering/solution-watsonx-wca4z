"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6649],{5109:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var a=t(5893),r=t(1151);const i={id:"guacamole",sidebar_position:9,title:"Guacamole",custom_edit_url:null},o=void 0,s={id:"Prepare/guacamole",title:"Guacamole",description:"Create the main pod and setup the database",source:"@site/docs/1-Prepare/8-Guacamole.mdx",sourceDirName:"1-Prepare",slug:"/Prepare/guacamole",permalink:"/solution-watsonx-wca4z/Prepare/guacamole",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",sidebarPosition:9,frontMatter:{id:"guacamole",sidebar_position:9,title:"Guacamole",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"VSCode",permalink:"/solution-watsonx-wca4z/Prepare/vscode"},next:{title:"GitLab",permalink:"/solution-watsonx-wca4z/Prepare/gitlab"}},l={},d=[{value:"Create the main pod and setup the database",id:"create-the-main-pod-and-setup-the-database",level:3},{value:"Create the pod that all other containers will connect with:",id:"create-the-pod-that-all-other-containers-will-connect-with",level:4},{value:"Create the directories that will be used by guacamole containters:",id:"create-the-directories-that-will-be-used-by-guacamole-containters",level:4},{value:"SELinux and Permissions",id:"selinux-and-permissions",level:4},{value:"Database setup",id:"database-setup",level:4},{value:"Start the database",id:"start-the-database",level:4},{value:"Start the guacamole service",id:"start-the-guacamole-service",level:4},{value:"Start the guacamole web service",id:"start-the-guacamole-web-service",level:4},{value:"Create a reverse proxy with SSL with NGINX hosted locally",id:"create-a-reverse-proxy-with-ssl-with-nginx-hosted-locally",level:3},{value:"Download nginx",id:"download-nginx",level:4},{value:"Generate the SSL files:",id:"generate-the-ssl-files",level:4},{value:"Configure NGINX",id:"configure-nginx",level:3},{value:"Create SSL.conf",id:"create-sslconf",level:4},{value:"Update nginx.conf",id:"update-nginxconf",level:4},{value:"Start and enable nginx",id:"start-and-enable-nginx",level:4},{value:"Adding Connections to Guacamole",id:"adding-connections-to-guacamole",level:3},{value:"Add Linux Connection",id:"add-linux-connection",level:4},{value:"Add a RDP Connection",id:"add-a-rdp-connection",level:4},{value:"Enable SFTP Sharing on a RDP Connection",id:"enable-sftp-sharing-on-a-rdp-connection",level:4},{value:"Troubleshooting:",id:"troubleshooting",level:3},{value:"Tortilla Users Permission (First Run)",id:"tortilla-users-permission-first-run",level:4},{value:"Tortilla Users Permission (After Guac has been running for awhile)",id:"tortilla-users-permission-after-guac-has-been-running-for-awhile",level:4}];function c(e){const n={code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h3,{id:"create-the-main-pod-and-setup-the-database",children:"Create the main pod and setup the database"}),"\n",(0,a.jsx)(n.h4,{id:"create-the-pod-that-all-other-containers-will-connect-with",children:"Create the pod that all other containers will connect with:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"podman pod create --name guac -p 8080:8080 -p 8443:8443\n"})}),"\n",(0,a.jsx)(n.h4,{id:"create-the-directories-that-will-be-used-by-guacamole-containters",children:"Create the directories that will be used by guacamole containters:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'# the directory the database container will scan for initialization scripts\nmkdir -p "guacamole-db/docker-entrypoint-initdb.d"\nmkdir -p "guacamole-db/data"\nmkdir -p /root/guacamole-db/guac_share\nchmod 777 /root/guacamole-db/guac_share\n\n'})}),"\n",(0,a.jsx)(n.h4,{id:"selinux-and-permissions",children:"SELinux and Permissions"}),"\n",(0,a.jsx)(n.p,{children:"Update SELeniux and Folder ownership:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"chcon -t container_file_t -R $(pwd)/guacamole-db\nchown 27:27 -R $(pwd)/guacamole-db\n"})}),"\n",(0,a.jsx)(n.h4,{id:"database-setup",children:"Database setup"}),"\n",(0,a.jsx)(n.p,{children:"Create the SQL scripts that will be run by mariadb:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"echo \"CREATE USER 'tortilla'@'127.0.0.1' IDENTIFIED BY 'p@ssw0rd';\" > guacamole-db/docker-entrypoint-initdb.d/01_initdb.sql\necho \"CREATE DATABASE bowl;\" >> guacamole-db/docker-entrypoint-initdb.d/01_initdb.sql\necho \"GRANT ALL PRIVILEGES ON bowl.* TO 'tortilla'@'127.0.0.1';\" >> guacamole-db/docker-entrypoint-initdb.d/01_initdb.sql\necho \"FLUSH privileges;\" >> guacamole-db/docker-entrypoint-initdb.d/01_initdb.sql\necho \"USE bowl;\" > guacamole-db/docker-entrypoint-initdb.d/02_initdb.sql\npodman run --rm docker.io/guacamole/guacamole /opt/guacamole/bin/initdb.sh --mysql >> guacamole-db/docker-entrypoint-initdb.d/02_initdb.sql\n"})}),"\n",(0,a.jsx)(n.p,{children:"Change the permissions of scripts used by MariaDB:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"chmod a+rx -R /root/guacamole-db/docker-entrypoint-initdb.d\n"})}),"\n",(0,a.jsx)(n.h4,{id:"start-the-database",children:"Start the database"}),"\n",(0,a.jsx)(n.p,{children:"Create the mariadb container:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"podman run -d \\\n--name=bowldatabase \\\n--pod=guac \\\n-e MARIADB_ROOT_PASSWORD=p@ssw0rd \\\n-v $(pwd)/guacamole-db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d \\\n-v $(pwd)/guacamole-db/data:/var/lib/mysql \\\n--restart unless-stopped docker.io/mariadb:latest\n"})}),"\n",(0,a.jsx)(n.h4,{id:"start-the-guacamole-service",children:"Start the guacamole service"}),"\n",(0,a.jsx)(n.p,{children:"Create the guacd container:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"podman run -d \\\n--name=guacd \\\n--pod=guac \\\n--restart unless-stopped \\\n-e GUACD_LOG_LEVEL=debug \\\n-v /root/guacamole-db/guac_share:/share \\\ndocker.io/guacamole/guacd\n"})}),"\n",(0,a.jsx)(n.h4,{id:"start-the-guacamole-web-service",children:"Start the guacamole web service"}),"\n",(0,a.jsx)(n.p,{children:"Create the guac-web container:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"podman run -d \\\n--name=guac-web \\\n--pod=guac \\\n-v /root/guacamole-db/guac_share:/share \\\n-e MYSQL_HOSTNAME=127.0.0.1 \\\n-e MYSQL_PORT=3306 \\\n-e MYSQL_DATABASE=bowl \\\n-e MYSQL_USER=tortilla \\\n-e MYSQL_PASSWORD=p@ssw0rd \\\n-e GUACD_HOSTNAME=127.0.0.1 \\\n-e GUACD_PORT=4822 \\\n-e WEBAPP_CONTEXT=ROOT \\\n-e MYSQL_SSL_MODE=disabled \\\n--restart unless-stopped \\\ndocker.io/guacamole/guacamole\n"})}),"\n",(0,a.jsx)(n.h3,{id:"create-a-reverse-proxy-with-ssl-with-nginx-hosted-locally",children:"Create a reverse proxy with SSL with NGINX hosted locally"}),"\n",(0,a.jsx)(n.h4,{id:"download-nginx",children:"Download nginx"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"yum install nginx -y\n"})}),"\n",(0,a.jsx)(n.h4,{id:"generate-the-ssl-files",children:"Generate the SSL files:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"sudo mkdir /etc/ssl/private\nsudo chmod 700 /etc/ssl/private\nsudo openssl req -x509 -nodes -days 999 -newkey rsa:2048 -keyout /etc/ssl/private/nginx-selfsigned.key -out /etc/ssl/certs/nginx-selfsigned.crt\n"})}),"\n",(0,a.jsx)(n.p,{children:"You will see a series of prompts that will ask the following:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"Output\nCountry Name (2 letter code) [XX]:US\nState or Province Name (full name) []:Example\nLocality Name (eg, city) [Default City]:Example \nOrganization Name (eg, company) [Default Company Ltd]:Example Inc\nOrganizational Unit Name (eg, section) []:Example Dept\nCommon Name (eg, your name or your server's hostname) []:your_domain_or_ip\nEmail Address []:webmaster@example.com\n"})}),"\n",(0,a.jsx)(n.p,{children:"Enter the information you prefer, for our testing we used the server's IP address for the Common Name."}),"\n",(0,a.jsx)(n.p,{children:"Now run the following, which will take up to 2 minutes to complete:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"sudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048\n"})}),"\n",(0,a.jsx)(n.h3,{id:"configure-nginx",children:"Configure NGINX"}),"\n",(0,a.jsx)(n.h4,{id:"create-sslconf",children:"Create SSL.conf"}),"\n",(0,a.jsx)(n.p,{children:"Create ssl.conf that will be used by nginx:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"vi /etc/nginx/conf.d/ssl.conf\n"})}),"\n",(0,a.jsx)(n.p,{children:'And past the following, make sure to update the "HOSTNAME" and "LOCAL_ADDRESS" before saving:'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"\nserver {\n    listen 8442;\n    listen [::]:8442;\n    server_name your_server_ip;\n    return 301 https://$host$request_uri;\n}\nserver {\n    listen 8443 http2 ssl;\n    listen [::]:8443 http2 ssl;\n\n    server_name HOSTNAME; # May use a hostname or IP\n\n    ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;\n    ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;\n    ssl_dhparam /etc/ssl/certs/dhparam.pem;\n\n  location / {\n    proxy_pass http://LOCAL_ADDRESS:8080; # May use an internal IP or 127.0.0.1\n    proxy_buffering off;\n    proxy_http_version 1.1;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection $http_connection;\n    access_log off;\n  }\n\n}\n"})}),"\n",(0,a.jsx)(n.h4,{id:"update-nginxconf",children:"Update nginx.conf"}),"\n",(0,a.jsx)(n.p,{children:"After saving SSL.conf, Comment out the following in /etc/nginx/nginx.conf"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"    server {\n        listen       80 default_server;\n        listen       [::]:80 default_server;\n        server_name  _;\n        root         /usr/share/nginx/html;\n\n        # Load configuration files for the default server block.\n        include /etc/nginx/default.d/*.conf;\n\n        location / {\n        }\n\n        error_page 404 /404.html;\n            location = /40x.html {\n        }\n\n\n        error_page 500 502 503 504 /50x.html;\n            location = /50x.html {\n        }\n    }\n\n"})}),"\n",(0,a.jsx)(n.p,{children:"So that it looks like this:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"#    server {\n#        listen       80 default_server;\n#        listen       [::]:80 default_server;\n#        server_name  _;\n#        root         /usr/share/nginx/html;\n#\n#        # Load configuration files for the default server block.\n#        include /etc/nginx/default.d/*.conf;\n#\n#        location / {\n#        }\n#\n#        error_page 404 /404.html;\n#            location = /40x.html {\n#        }\n#\n#\n#        error_page 500 502 503 504 /50x.html;\n#            location = /50x.html {\n#        }\n#    }\n#\n"})}),"\n",(0,a.jsx)(n.h4,{id:"start-and-enable-nginx",children:"Start and enable nginx"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"systemctl start nginx\nsystemctl enable nginx\n"})}),"\n",(0,a.jsx)(n.h3,{id:"adding-connections-to-guacamole",children:"Adding Connections to Guacamole"}),"\n",(0,a.jsx)(n.h4,{id:"add-linux-connection",children:"Add Linux Connection"}),"\n",(0,a.jsx)(n.p,{children:'Go to the top right and click on username then select "Settings".\nClick on "Connections" and then click on "New Connection"\nAdd a name\nSelect a protocol\nScroll down to "Authentication" and enter the username & Password\nEnable "SFTP"\nClick \'Save\''}),"\n",(0,a.jsx)(n.h4,{id:"add-a-rdp-connection",children:"Add a RDP Connection"}),"\n",(0,a.jsx)(n.p,{children:'Go to the top right and click on username then select "Settings".\nClick on "Connections" and then click on "New Connection"\nAdd a name\nSelect a protocol\nScroll down to "Authentication" and enter the username & Password\nClick "Save"'}),"\n",(0,a.jsx)(n.h4,{id:"enable-sftp-sharing-on-a-rdp-connection",children:"Enable SFTP Sharing on a RDP Connection"}),"\n",(0,a.jsx)(n.p,{children:'Connect to the Windows server using RDP or Guacamole\nOpen "Apps & features"\nClick  "Manage optional features"\nClick "Add a feature"\nScroll down and select "OpenSSH Server", then install it.\nOpen "Windows Defender Firewall"\nClick "Advanced firewall settings"\nClick "Inbound Rules"\nClick "New Rule"\nA new window will open, click on "Port", then click "Next"\nLeave it on "Port" and then add "22" to "Specific Local Ports".\nClick next twice.\nSelect which profiles this rules apply to, we used "Domain" and "Private" and then click next.\nAdd a name, and click "Finish"\nGo to "Services", scroll down to "OpenSSH Server", double click and select "Automatic" from the drop down, then select "Start". Press OK.'}),"\n",(0,a.jsx)(n.p,{children:"Back on Guacemole:"}),"\n",(0,a.jsx)(n.p,{children:'Go to the top right and click on your username then select "Settings".\nClick "Connection" and select the already existing RDP connection.\nEnable "SFTP"\nSet the port to "22"\nAdd the username and password\nClick \'Save\''}),"\n",(0,a.jsx)(n.h3,{id:"troubleshooting",children:"Troubleshooting:"}),"\n",(0,a.jsx)(n.h4,{id:"tortilla-users-permission-first-run",children:"Tortilla Users Permission (First Run)"}),"\n",(0,a.jsx)(n.p,{children:"If there are any issues in the 'guac-web' logs related to Tortilla user permmissions, then do the following:"}),"\n",(0,a.jsx)(n.p,{children:"Exec into the mariadb containter:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"podman exec -it bowldatabase bash\n"})}),"\n",(0,a.jsx)(n.p,{children:"Log into mariadb:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"mariadb -u root -p\n"})}),"\n",(0,a.jsx)(n.p,{children:"After entering your password, run the following commands:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"source /docker-entrypoint-initdb.d/01_initdb.sql\nFLUSH PRIVILEGES;\nUSE bowl;\nsource /docker-entrypoint-initdb.d/02_initdb.sql\nshow tables;\nquit; \nexit\n"})}),"\n",(0,a.jsx)(n.h4,{id:"tortilla-users-permission-after-guac-has-been-running-for-awhile",children:"Tortilla Users Permission (After Guac has been running for awhile)"}),"\n",(0,a.jsx)(n.p,{children:"Exec into the mariadb containter:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"podman exec -it bowldatabase mariadb -u root -p\n"})}),"\n",(0,a.jsxs)(n.p,{children:["password above would be ",(0,a.jsx)(n.code,{children:"p@ssw0rd"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Drop and recreate the db user ",(0,a.jsx)(n.code,{children:"tortilla"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"MariaDB [(none)]> use bowl;\nMariaDB [bowl]> drop user 'tortilla'@'127.0.0.1';\nMariaDB [bowl]> create user 'tortilla'@'127.0.0.1' IDENTIFIED BY 'p@ssw0rd';\nMariaDB [bowl]> GRANT ALL PRIVILEGES ON bowl.* TO 'tortilla'@'127.0.0.1';\nMariaDB [bowl]> quit\n"})}),"\n",(0,a.jsx)(n.p,{children:"guac-web container should pick it right up."})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>o});var a=t(7294);const r={},i=a.createContext(r);function o(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);