"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4621],{1483:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var s=r(5893),n=r(1151);const i={id:"TLS",sidebar_position:4,title:"TLS Connections",custom_edit_url:null},o=void 0,c={id:"Prepare/TLS",title:"TLS Connections",description:"This section will assume you have completed most of the major tasks in ADDI and Refactor",source:"@site/docs/1-Prepare/3-TLS_Connections.mdx",sourceDirName:"1-Prepare",slug:"/Prepare/TLS",permalink:"/solution-watsonx-wca4z/Prepare/TLS",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"TLS",sidebar_position:4,title:"TLS Connections",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"Refactor Assistant",permalink:"/solution-watsonx-wca4z/Prepare/Refactor"},next:{title:"Cloud Database",permalink:"/solution-watsonx-wca4z/Prepare/cloud_databases"}},a={},l=[{value:"TLS Certs and Keystores",id:"tls-certs-and-keystores",level:3},{value:"Configuring Certs",id:"configuring-certs",level:3},{value:"Import the certificate to Java runtime keystore",id:"import-the-certificate-to-java-runtime-keystore",level:3},{value:"DEX Server configuration",id:"dex-server-configuration",level:3}];function d(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["This section will assume you have completed most of the major tasks in ",(0,s.jsx)(t.a,{href:"ADDI",children:"ADDI"})," and ",(0,s.jsx)(t.a,{href:"Refactor",children:"Refactor"})]})}),"\n",(0,s.jsx)(t.h3,{id:"tls-certs-and-keystores",children:"TLS Certs and Keystores"}),"\n",(0,s.jsx)(t.p,{children:"The following is a complicated dance between our two hosts, Refactor and ADDI. We need to generate our TLS certs."}),"\n",(0,s.jsx)(t.p,{children:"Create some keystores for stuff. For real, DEX needs this and we're ultimately going to import our root cert from the refactor assistant into this keystore."}),"\n",(0,s.jsxs)(t.admonition,{type:"info",children:[(0,s.jsx)(t.p,{children:"Useful links for this section"}),(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://www.ibm.com/docs/en/watsonx-code-assistant-4z/1.0.1?topic=ad-prepare-files-enabling-secure-communication#securing_prepare_files__prepare_key_crt__title__1",children:"https://www.ibm.com/docs/en/watsonx-code-assistant-4z/1.0.1?topic=ad-prepare-files-enabling-secure-communication#securing_prepare_files__prepare_key_crt__title__1"})})]}),"\n",(0,s.jsxs)(t.admonition,{type:"warning",children:[(0,s.jsx)(t.p,{children:"As of windows server 2022 and newer, (win11x), the default output from any cmdlet in PowerShell automatically encodes the output as UTF-16E. This causes a problem for the configuration service when it tries to import the certificate chain we will be generating."}),(0,s.jsxs)(t.p,{children:["Ref: ",(0,s.jsx)(t.a,{href:"https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_character_encoding?view=powershell-7.4",children:"https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_character_encoding?view=powershell-7.4"})]}),(0,s.jsx)(t.p,{children:"To set the output encoding correctly, add the following to the PowerShell profile if you can."}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-powershell",children:"$PSDefaultParameterValues['Out-File:Encoding'] = 'utf8'\n"})}),(0,s.jsx)(t.p,{children:"Otherwise run that powershell command each time you open a PowerShell instance."})]}),"\n",(0,s.jsx)(t.p,{children:"Each server must have a keystore that contains the following entries:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["A ",(0,s.jsx)(t.code,{children:"PrivateKeyEntry"})," of the CA signed certificate."]}),"\n",(0,s.jsxs)(t.li,{children:["A ",(0,s.jsx)(t.code,{children:"TrustedCertEntry"})," of the root CA certificate."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"It's apparently optional to generate a self-signed key cert. We're going to generate one as while it's best practices to have a key cert signed by a real CA, we don't have a real CA."}),"\n",(0,s.jsx)(t.p,{children:"This will be our local keystore."}),"\n",(0,s.jsxs)(t.p,{children:["Make sure that ",(0,s.jsx)(t.code,{children:"D:\\certificates"})," exists as this is where we will store these keys."]}),"\n",(0,s.jsxs)(t.p,{children:["It's best to use the FQDN of your ADDI host if you have one. Ours in this example is ",(0,s.jsx)(t.code,{children:"wca4z2-winaddi.fyre.ibm.com"}),". However you can also just use the host ip address."]}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["We are adding ",(0,s.jsx)(t.code,{children:"-validity 3653"})," to the documented command to extend the certificate expiration to 10 years from the default of 90 days."]})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-powershell",children:'keytool -genkeypair -alias "wca4z2-winaddi.fyre.ibm.com" -keyalg RSA -keysize 2048 -dname "cn=wca4z2-winaddi.fyre.ibm.com" -keypass "p@ssw0rd" -keystore "D:\\certificates\\server_keystore.p12" -storepass "p@ssw0rd" -validity 3653 -storetype PKCS12 -ext BasicConstraints:critical=ca:true -ext san=dns:wca4z2-winaddi.fyre.ibm.com\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Now we have a keystore sitting at ",(0,s.jsx)(t.code,{children:"C:\\Users\\Administrator.WCA4Z-ADDI\\server_keystore.p12"})]}),"\n",(0,s.jsx)(t.p,{children:"Let's now export the cert"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-powershell",children:'keytool -exportcert -alias "wca4z2-winaddi.fyre.ibm.com" -keystore "D:\\certificates\\server_keystore.p12" -file "D:\\certificates\\server_certificate.crt" -storepass "p@ssw0rd"\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Now let's re-import the certificate into the keystore under the alias of ",(0,s.jsx)(t.code,{children:"self-signed-root"})]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-powershell",children:'keytool -keystore "D:\\certificates\\server_keystore.p12" -import -file "D:\\certificates\\server_certificate.crt" -alias "self-signed-root" -storepass "p@ssw0rd"\n'})}),"\n",(0,s.jsx)(t.p,{children:"If you have the DB2 SSL certificate for the cloud instance of DB2, import it into the keystore as well."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-powershell",children:'keytool -import -trustcacerts -alias "DB2-ssl-cert" -file "D:\\certificates\\DigiCertGlobalRootCA.crt" -keystore "D:\\certificates\\server_keystore.p12" -storepass "p@ssw0rd"\n'})}),"\n",(0,s.jsxs)(t.p,{children:["In that vein, if you followed the TLS setup ",(0,s.jsx)(t.a,{href:"Refactor#generate-the-tls-certs-for-refactor",children:"here"}),", you should have a ",(0,s.jsx)(t.code,{children:"root.crt"})," in ",(0,s.jsx)(t.code,{children:"/root/certs"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["Create a new file called ",(0,s.jsx)(t.code,{children:"root.crt"})," in the ",(0,s.jsx)(t.code,{children:"D:\\certificates"})," directory on the ADDI host and paste the contents in from ",(0,s.jsx)(t.code,{children:"/root/certs/root.crt"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"Now import the certificate by running the following command in powershell:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-powershell",children:'keytool -importcert -alias ad-core-server -keystore "D:\\certificates\\server_keystore.p12" -storetype PKCS12 -storepass "p@ssw0rd" -file "D:\\certificates\\root.crt" -storepass p@ssw0rd -ext BasicConstraints:critical=ca:true -ext san=dns:wca4z2-winaddi.fyre.ibm.com\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Now let's use OpenSSL to generate the ",(0,s.jsx)(t.code,{children:"server.key"})]}),"\n",(0,s.jsx)(t.p,{children:"Open up Cygwin Terminal App"}),"\n",(0,s.jsxs)(t.p,{children:["Use the ",(0,s.jsx)(t.strong,{children:"OpenSSL"})," tool from ",(0,s.jsx)(t.strong,{children:"Cygwin"})," to export the certificates in a dedicated location."]}),"\n",(0,s.jsx)(t.p,{children:"To generate the server.key file, run the following command in the Cygwin Terminal App."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'openssl pkcs12 -in "D:\\certificates\\server_keystore.p12" -nocerts -nodes -out "D:\\certificates\\server.key"\n'})}),"\n",(0,s.jsx)(t.h3,{id:"configuring-certs",children:"Configuring Certs"}),"\n",(0,s.jsx)(t.p,{children:"Log back into the ADDI host."}),"\n",(0,s.jsxs)(t.p,{children:["If you've followed the above steps, you should have the following files in ",(0,s.jsx)(t.code,{children:"D:\\certificates"})," on the ADDI host."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:"https://github.com/ibm-client-engineering/solution-watsonx-ca4z/assets/102995992/e244991c-fe4e-4982-9ed9-ec55019180b2",alt:"ADDI_HOST"})}),"\n",(0,s.jsxs)(t.p,{children:["Generate the ",(0,s.jsx)(t.code,{children:"server_certificate.crt"})," file again, but ",(0,s.jsx)(t.em,{children:"different"})," in your Powershell window."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"$PSDefaultParameterValues['Out-File:Encoding'] = 'utf8'\nkeytool -list -keystore \"D:\\certificates\\server_keystore.p12\" -rfc > \"D:\\certificates\\server_certificate.crt\"\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Open that ",(0,s.jsx)(t.code,{children:"server_certificate.crt"})," in notepad and reset the order of certs. We want the root cert to be at the top."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"Keystore type: PKCS12\nKeystore provider: SUN\n\nYour keystore contains 4 entries\n//highlight-start\nAlias name: wca4z2-winaddi.fyre.ibm.com\nCreation date: Mar 1, 2024\nEntry type: PrivateKeyEntry\nCertificate chain length: 1\nCertificate[1]:\n-----BEGIN CERTIFICATE-----\n<CERT HERE>\n-----END CERTIFICATE-----\n//highlight-end\n\n*******************************************\n*******************************************\n\n\nAlias name: ad-core-server\nCreation date: Mar 1, 2024\nEntry type: trustedCertEntry\n\n-----BEGIN CERTIFICATE-----\n<CERT HERE>\n-----END CERTIFICATE-----\n\n\n*******************************************\n*******************************************\n\n\nAlias name: db2-ssl-cert\nCreation date: Mar 1, 2024\nEntry type: trustedCertEntry\n\n-----BEGIN CERTIFICATE-----\n<CERT HERE>\n-----END CERTIFICATE-----\n\n\n*******************************************\n*******************************************\n\n\nAlias name: self-signed-root\nCreation date: Mar 1, 2024\nEntry type: trustedCertEntry\n\n-----BEGIN CERTIFICATE-----\n<CERT HERE>\n-----END CERTIFICATE-----\n\n\n*******************************************\n*******************************************\n\n\n"})}),"\n",(0,s.jsxs)(t.p,{children:["The root CA certificate or the self-signed certificate must be installed into the local machine's trusted root certificate authorities. These certs should be the ",(0,s.jsx)(t.code,{children:"server_certificate.crt"})," and ",(0,s.jsx)(t.code,{children:"root.crt"}),". Also the DB2 SSL cert if you received one. These certs should all be in the ",(0,s.jsx)(t.code,{children:"C:\\certificates"})," directory since that's where we've been putting them."]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["On Windows:","\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"Right-click the certificate and then click Install Certificate."}),"\n",(0,s.jsx)(t.li,{children:"Select Local Machine and click Next."}),"\n",(0,s.jsx)(t.li,{children:"Select Place all certificates in the following store."}),"\n",(0,s.jsx)(t.li,{children:"Click Browse... and select Trusted Root Certificate Authorities."}),"\n",(0,s.jsx)(t.li,{children:"Click OK and then Next."}),"\n",(0,s.jsx)(t.li,{children:"Click Finish to complete the certificate import wizard."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"import-the-certificate-to-java-runtime-keystore",children:"Import the certificate to Java runtime keystore"}),"\n",(0,s.jsx)(t.p,{children:"To import the certificate to Java runtime keystore, complete the following steps:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["Open a Command Prompt (on Windows) or a Terminal (on Linux) and go to the folder containing the newly prepared ",(0,s.jsx)(t.code,{children:"server_keystore.p12"}),". This would be ",(0,s.jsx)(t.code,{children:"C:\\certificates"}),"."]}),"\n",(0,s.jsx)(t.li,{children:"Execute the following command to import all certificates from server_keystore.p12 to the Java's cacerts keystore."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Run this in a regular dos shell. Powershell will not have the JAVA_HOME env set correctly."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-dos",children:'keytool -importkeystore -srckeystore "D:\\certificates\\server_keystore.p12" -srcstorepass "p@ssw0rd" -destkeystore "%JAVA_HOME%\\lib\\security\\cacerts" -deststorepass "changeit"\n        \n'})}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsxs)(t.p,{children:["The default cacerts password is ",(0,s.jsx)(t.code,{children:"changeit"}),"."]})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:"https://github.com/ibm-client-engineering/solution-watsonx-ca4z/assets/102995992/5a80ddf9-2b8e-46d1-82b5-bfa48a5fdadb",alt:"ADDI"})}),"\n",(0,s.jsx)(t.p,{children:"WIll probably have to repeat when we have a cert for the db2 instance"}),"\n",(0,s.jsxs)(t.p,{children:["From the ",(0,s.jsx)(t.strong,{children:"ADDI Dashboard"}),", restart the Configuration service."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://localhost:9443/ad/admin/dashboard",children:"https://localhost:9443/ad/admin/dashboard"})}),"\n",(0,s.jsx)(t.p,{children:"In powershell on the ADDI host, export the zookeeper.crt from the keystore."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-powershell",children:'\nkeytool -exportcert -alias "wca4z2-winaddi.fyre.ibm.com" -keystore "D:\\certificates\\server_keystore.p12" -rfc -file "D:\\certificates\\zookeeper.crt" -storepass "p@ssw0rd" -ext BasicConstraints:critical=ca:true -ext san=dns:wca4z2-winaddi.fyre.ibm.com\n\n'})}),"\n",(0,s.jsxs)(t.p,{children:["On the RA host, create the ",(0,s.jsx)(t.code,{children:"zookeeper.crt"})," file in ",(0,s.jsx)(t.code,{children:"/etc/pki/ca-trust/source/anchors"})," and copy the contents of ",(0,s.jsx)(t.code,{children:"zookeeper.crt"})," into it."]}),"\n",(0,s.jsx)(t.p,{children:"Then run the following command on the Refactor host"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"update-ca-trust extract\n"})}),"\n",(0,s.jsx)(t.p,{children:"Create the following symlinks"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"ln -s /etc/pki/ca-trust/source/anchors/zookeeper.crt /root/certs/ad.crt\nln -s /etc/pki/ca-trust/source/anchors/zookeeper.crt /root/certs/dex.crt\nln -s /etc/pki/ca-trust/source/anchors/zookeeper.crt /root/certs/zookeeper.crt\n"})}),"\n",(0,s.jsx)(t.h3,{id:"dex-server-configuration",children:"DEX Server configuration"}),"\n",(0,s.jsx)(t.p,{children:"Let's generate a hashed SHA256 password on the linux refactor host"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"htpasswd -nbBC 10 addi_user p@ssw0rd\naddi_user:$2y$10$vAk2SLjHIU2x2dNuzwDxDuq6TwdnLK1XeO8OCzxNqXK3yv3ObYfIy\n"})}),"\n",(0,s.jsxs)(t.p,{children:["On the ADDI host, open the ",(0,s.jsx)(t.code,{children:"dex.yaml"})," file:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"C:\\Program Files\\IBM Application Discovery and Delivery Intelligence\\Authentication Server (DEX)\\conf\\dex.yaml\n"})}),"\n",(0,s.jsx)(t.p,{children:"The cert paths will be updated when the certs are imported into ADDI."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Our ",(0,s.jsx)(t.code,{children:"issuer"})," should be either the FQDN or the IP of the ADDI host"]}),"\n",(0,s.jsxs)(t.li,{children:["The ",(0,s.jsx)(t.code,{children:"redirectURIs:"})," should point to the ip of the Refactor server."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"staticPasswords.hash"})," should be the generated bcrypt password from above"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"dex.yaml"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"issuer: https://wca4z2-winaddi.fyre.ibm.com:7600/dex\nstorage:\n  type: sqlite3\n  config:\n  file: dex.db\nfrontend:\n  theme: addi\nweb:\n  TLSCert: conf/server_certificate.crt\n  TLSKey: conf/server.key\n  https: 0.0.0.0:7600\nconnectors: []\n\nenablePasswordDB: true\nstaticClients:\n  - id: refactoring-assistant\n    redirectURIs:\n      - https://9.66.242.37:9443\n    name: Refactoring Assistant\n    secret: pkce\nstaticPasswords:\n  - email: addi_user@ibm.com\n    hash: $2y$10$vAk2SLjHIU2x2dNuzwDxDuq6TwdnLK1XeO8OCzxNqXK3yv3ObYfIy \n    username: addi_user\n    userID: null\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Open the admin dashboard and click Configure at the top\n",(0,s.jsx)(t.a,{href:"https://localhost:9443/ad/admin/dashboard",children:"https://localhost:9443/ad/admin/dashboard"})]}),"\n",(0,s.jsx)(t.p,{children:"Click on the Default env"}),"\n",(0,s.jsx)(t.p,{children:"Go to Servers and Security"}),"\n",(0,s.jsx)(t.p,{children:"Select Security from the choices on the left and then select HTTPS as the protocol type"}),"\n",(0,s.jsxs)(t.p,{children:['At the bottom go to "Drag and Drop files here..." and upload the following files from ',(0,s.jsx)(t.code,{children:"D:\\certificates"})]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"server_keystore.p12"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"server_certificate.crt"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"server.key"})}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Set the password to ",(0,s.jsx)(t.code,{children:"p@ssw0rd"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["Successful import should look like this\n",(0,s.jsx)(t.img,{src:"https://media.github.ibm.com/user/20330/files/21d267db-6649-4407-bc52-823a89fb2918",alt:"cert import"})]}),"\n",(0,s.jsx)(t.p,{children:"Restart the IBM Application Discovery Configuration Service from the Dashboard."})]})}function h(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,t,r)=>{r.d(t,{Z:()=>c,a:()=>o});var s=r(7294);const n={},i=s.createContext(n);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);